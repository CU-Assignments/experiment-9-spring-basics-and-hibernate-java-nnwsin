package com.example.entity;

import javax.persistence.*;

@Entity
public class Account {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id;

    private String holderName;
    private double balance;

    public Account() {}
    public Account(String holderName, double balance) {
        this.holderName = holderName;
        this.balance = balance;
    }

    // Getters, Setters, toString()
}


package com.example.entity;

import javax.persistence.*;
import java.util.Date;

@Entity
public class TransactionRecord {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id;

    private String fromAccount;
    private String toAccount;
    private double amount;
    private Date date = new Date();

    // Constructors, Getters, Setters
}



package com.example;

import com.example.entity.Account;
import com.example.service.BankService;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

public class MainApp {
    public static void main(String[] args) {
        SessionFactory factory = new Configuration()
                .configure()
                .addAnnotatedClass(Account.class)
                .addAnnotatedClass(com.example.entity.TransactionRecord.class)
                .buildSessionFactory();

        // First run: create accounts
        Session session = factory.getCurrentSession();
        session.beginTransaction();
        session.save(new Account("Rohit", 1000));
        session.save(new Account("Aman", 500));
        session.getTransaction().commit();

        // Perform transfer
        BankService service = new BankService(factory);
        service.transfer("Rohit", "Aman", 300); // success
        service.transfer("Rohit", "Aman", 800); // should fail (rollback)

        factory.close();
    }
}


